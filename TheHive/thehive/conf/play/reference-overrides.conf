# HTTP filters
play.filters {
  # name of cookie in which the CSRF token is transmitted to client
  csrf.cookie.name = THEHIVE-XSRF-TOKEN
  # name of header in which the client should send CSRD token
  csrf.header.name = X-THEHIVE-XSRF-TOKEN

  enabled = [
  ]
}

play.http.parser.maxDiskBuffer = 128MB
play.http.parser.maxMemoryBuffer = 256kB


# Register module for dependency injection
play.modules.enabled += org.thp.thehive.TheHiveModule

play.http.session.cookieName = THEHIVE-SESSION

play.server.provider = org.thp.thehive.CustomAkkaHttpServerProvider

play.server.http.idleTimeout = 10 minutes

akka.actor {
  serializers {
    stream = "org.thp.thehive.services.StreamSerializer"
    notification = "org.thp.thehive.services.notification.NotificationSerializer"
    //thehive-schema-updater = "org.thp.thehive.models.SchemaUpdaterSerializer"
    flow = "org.thp.thehive.services.FlowSerializer"
    integrity = "org.thp.thehive.services.IntegrityCheckSerializer"
    caseNumber = "org.thp.thehive.services.CaseNumberSerializer"
  }

  serialization-bindings {
    "org.thp.thehive.services.StreamMessage" = stream
    "org.thp.thehive.services.notification.NotificationMessage" = notification
    //"org.thp.thehive.models.SchemaUpdaterMessage" = thehive-schema-updater
    "org.thp.thehive.services.FlowMessage" = flow
    "org.thp.thehive.services.IntegrityCheck$Message" = integrity
    "org.thp.thehive.services.CaseNumberActor$Message" = caseNumber
  }
}
